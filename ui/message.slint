import { Button, HorizontalBox, ScrollView, VerticalBox } from "std-widgets.slint";

export struct Embed {
    title: string,
    link: string,
    description: string
}

export component EmbedComponent inherits Rectangle {
    in property <Embed> embed: {
        title: "Test Embed",
        link: "https://example.com",
        description: "This is some example text that goes on and on and on and on"
    };

    in property <length> m-width: 250px;

    border-radius: 5px;
    border-width: 1px;
    border-color: grey;

    VerticalBox {
        Text {
            text: embed.link;
            font-size: 11px;
            width: root.m-width - 30px;
            overflow: TextOverflow.elide;
        }
        Text {
            text: embed.title;
            font-size: 15px;
        }
        Text {
            text: embed.description;
            wrap: word-wrap;
            width: root.m-width - 30px;
        }
    }
}

export struct Message {
    id: int,
    user: string, // TODO: user struct
    profile_picture: image,
    content: string,
    has_parent: bool,
    parent_message: string,
    images: [image],
    embeds: [Embed]
    // TODO: Embeds
}

export component MessageComponent {
    width: 500px;
    in property <Message> message;

    in property <length> m-width: 500px;

    callback delete(int);

    HorizontalLayout {
        padding-top: 10px;
        padding-bottom: 10px;
        VerticalLayout {
            padding-left: 10px;
            Text {
                visible: message.has_parent;
                text: "Parent: \{message.parent_message}";
            }
            Text {
                text: message.user;
                font-size: 15px;
                max-height: 25px;
            }
            Text {
                text: message.content;
                font-size: 14px;
                wrap: word-wrap;
                width: root.m-width - 30px;
            }
            HorizontalLayout {
                for img in message.images: Image {
                    source: img;
                    height: img.height * 1px;
                    width: img.width * 1px;
                }
            }
            HorizontalLayout {
                padding-top: 10px;
                for embed in message.embeds: EmbedComponent {
                    embed: embed;
                }
            }
        }
    }
}
